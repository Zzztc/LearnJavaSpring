<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--  声明bean  -->
    <!--
        引用类型自动注入：spring根据byName，byType规则给引用类型赋值
        1.byName（按名称注入）：java类中引用类型属性名称和spring容器中bean的id名称一样的，且数据类型也是一样的，这些bean能够赋值给引用类型。
        语法：
        <bean id="xxx" class="yyy" autowire="byName">
            简单类型属性赋值
        </bean>
        2.byType（按类型注入）：java类中引用类型的数据类型和spring容器中bean的class值是同源关系的，这样的bean赋值给引用类型。
        同源关系：
        1.java中引用类型的数据类型和bean的class值是一样的。
        2.java中引用类型的数据类型和bean的class值是父子类关系的。
        3.java中引用类型的数据类型和bean的class值是接口和实现类关系的。
        语法：
        <bean id="xxx" class="yyy" autowire="byType">
            简单类型属性赋值
        </bean>

        注意：在xml配置文件中，符合条件的对象，只能有一个
             多于一个会报错
    -->
    <!--  byType自动注入  -->
    <bean id="myStudent" class="com.learnspring.ba05.Student" autowire="byType">
        <property name="name" value="李四"/>
        <property name="age" value="22"/>
    </bean>
<!--声明School-->
<!--    <bean id="mySchool" class="com.learnspring.ba05.School">-->
<!--        <property name="name" value="清华大学"/>-->
<!--        <property name="address" value="北京海淀区"/>-->
<!--    </bean>-->
<!--声明School的子类-->
    <bean id="primarySchool" class="com.learnspring.ba05.PrimarySchool">
        <property name="name" value="北京大兴小学"/>
        <property name="address" value="北京大兴区"/>

    </bean>
</beans>